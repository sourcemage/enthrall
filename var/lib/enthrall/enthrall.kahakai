#!/bin/sh

function prepare_menu_location {
# moving the old menu out of the way

  if [ "$OWN_MENU" == "true" ]; then
    [ -e "$KAHAKAI_USER_MENU" ] &&
    mv $KAHAKAI_USER_MENU $KAHAKAI_USER_MENU.$(date +%Y%m%d%H%M%S)
    KKMENU="$KAHAKAI_USER_MENU"
  else
    [ -e "$KAHAKAI_MENU" ] &&
    mv $KAHAKAI_MENU $KAHAKAI_MENU.$(date +%Y%m%d%H%M%S)
    KKMENU="$KAHAKAI_MENU"
  fi

  local menuname=`basename "$KKMENU"`
  local menudir=`echo "$KKMENU"|sed "s/\/$menuname//"`
  [ -d "$menudir" ] || mkdir -p "$menudir"
}

function start_kkmenu {
# the start of the kahakai menu
cat >> $KKMENU << EOF
!
! Warning, this file is automatically generated
! DO NOT EDIT
!
! Start of the kahakai root menu
!
[start] (rootmenu)
  [title] (Kahakai)
EOF
}

function close_kkmenu {
cat >> $KKMENU << EOF
  [sub] (Desktops) <__gotodesktoplist__>

  [sub] (Styles)        <!styles.py>

  [sub] (Proclist)      <!procinfo.pl>

  [restart] (Restart)
  [exit]    (Exit)
[end]

!
! Window Menu
!
[start] (window)
  [title]   (\\n)
  [submenu] (Settings)
    [checkbox=MAXIMIZED]      @FALSE (Maximized)        "maximize"         @TRUE (Maximized)        "unMaximize"
    [checkbox=MINIMIZED]      @FALSE (Minimized)        "minimize"         @TRUE (Minimized)        "unMinimize"
    [checkbox=FULLSCREEN]     @FALSE (Fullscreen)       "fullscreenOn"     @TRUE (Fullscreen)       "fullscreenOff"
    [checkbox=SHADED]         @FALSE (Shaded)           "shade"            @TRUE (Shaded)           "unShade"
    [checkbox=STICKY]         @FALSE (Sticky)           "sticky"           @TRUE (Sticky)           "unSticky"
    [checkbox=ALWAYSONTOP]    @FALSE (Always on top)    "alwaysOnTopOn"    @TRUE (Always on top)    "alwaysOnTopOff"
    [checkbox=ALWAYSATBOTTOM] @FALSE (Always at bottom) "alwaysAtBottomOn" @TRUE (Always at bottom) "alwaysAtBottomOff"
    [checkbox=DECORTITLE]     @FALSE (Titlebar)         "decorTitleOn"     @TRUE (Titlebar)         "decorTitleOff"
    [checkbox=DECORHANDLE]    @FALSE (Handlebar)        "decorHandleOn"    @TRUE (Handlebar)        "decorHandleOff"
    [checkbox=DECORBORDER]    @FALSE (Border)           "decorBorderOn"    @TRUE (Border)           "decorBorderOff"
    [checkbox=DECORALL]       @FALSE (All decorations)  "decorAllOn"       @TRUE (All decorations)  "decorAllOff"
  [end]
  [sub]     (Process info) <!procinfo.pl -host \h -pid \p>
  [submenu] (Desktop functions)
    [sub]  (Send to desktop) <__senddesktoplist__>
    [sub]  (Join desktop)    <__joindesktoplist__>
    [sub]  (Part desktop)    <__partdesktoplist__>
    [item] (Join all)     "joinAllDesktops"
    [item] (Part all)     "partAllDesktopsExceptCurrent"
    [item] (Part current) "partCurrentDesktop"
  [end]
  [item]    (Raise)       "raise"
  [item]    (Lower)       "lower"
  [item]    (Kill client) "kill"
  [item]    (Close)       "close"
[end]
EOF
}

function insert_submenu_begin() {
  echo "[submenu] ($1)" >> $KKMENU
}

function insert_submenu_end {
  echo "[end]" >> $KKMENU
}

function insert_entry() {
    menuline=$1
    APP=`echo $menuline|cut -f1 -d":" `
    EXEC=`echo $menuline|cut -f4 -d":" `
    TERM=`echo $menuline|cut -f5 -d":" `
    if [[ $TERM == true ]] ; then
      echo "[item] ("$APP") {xterm -e $EXEC}" >> $KKMENU
    else
      echo "[item] ("$APP") {$EXEC}" >> $KKMENU
    fi
}

function build_menu {
  cat $SORTED_INVENTORY | while read line ; do
    case $line in
        START_SUB*) insert_submenu_begin `echo $line|cut -f2 -d" " ` ;;
        END_SUB) insert_submenu_end ;;
        *) insert_entry "$line" ;;
    esac
  done
}

# building the menu
prepare_menu_location &&
start_kkmenu &&
build_menu &&
close_kkmenu ||
echo "Generating of the kahakai menu has failed!"
