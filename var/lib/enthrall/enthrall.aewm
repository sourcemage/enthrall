#!/bin/sh

function prepare_menu_location {
# moving the old menu out of the way

  if [ "$OWN_MENU" == "true" ]; then
    [ -e "$AEWM_USER_MENU" ] &&
    mv $AEWM_USER_MENU $AEWM_USER_MENU.$(date +%Y%m%d%H%M%S)
    AEWMMENU="$AEWM_USER_MENU"
  else
    [ -e "$AEWM_MENU" ] &&
    mv $AEWM_MENU $AEWM_MENU.$(date +%Y%m%d%H%M%S)
    AEWMMENU="$AEWM_MENU"
  fi

  local menuname=`basename "$AEWMMENU"`
  local menudir=`echo "$AEWMMENU"|sed "s/\/$menuname//"`
  [ -d "$menudir" ] || mkdir -p "$menudir"
}

function start_aewmmenu {
# the start of the aewm menu
cat >> $AEWMMENU << EOF
# Warning, this file is automatically generated
# DO NOT EDIT
#
# Start of the aewm menu
EOF
}

function close_aewmmenu {
# closing the aewm menu
cat >> $AEWMMENU << EOF
   menu "aewm"
   cmd "aepanel" "aepanel"
   cmd "Kill aepanel" "skill aepanel"
   cmd "Logout" "skill aesession"
   end

   # End of the aewm menu" >> $AEWMMENU
EOF
}

function insert_submenu_begin() {
  echo "menu \"$1\" ">> $AEWMMENU
}

function insert_submenu_end {
  echo "end" >> $AEWMMENU
}

function insert_entry() {
    menuline=$1
    APP=`echo $menuline|cut -f1 -d":" `
    EXEC=`echo $menuline|cut -f4 -d":" `

    TERM=`echo $menuline|cut -f5 -d":" `
    if [[ $TERM == true ]] ; then
      echo "cmd \"$APP\" \"xterm -e $EXEC\" " >> $AEWMMENU
    else
      echo "cmd \"$APP\" \"$EXEC\" " >> $AEWMMENU
    fi
}

function build_menu {
  cat $SORTED_INVENTORY | while read line ; do
    case $line in
        START_SUB*) insert_submenu_begin `echo $line|cut -f2 -d" " ` ;;
	END_SUB) insert_submenu_end ;;
        *) insert_entry "$line" ;;
    esac
  done
}

# building the menu
prepare_menu_location &&
start_aewmmenu &&
build_menu &&
close_aewmmenu ||
echo "Generating of the aewm menu has failed!"
