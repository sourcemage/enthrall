#!/bin/sh

function prepare_menu_location {
# moving the old menu out of the way

  if [ "$OWN_MENU" == "true" ]; then
    [ -e "$OPENBOX_USER_MENU" ] &&
    mv $OPENBOX_USER_MENU $OPENBOX_USER_MENU.$(date +%Y%m%d%H%M%S)
    OPENBOXMENU="$OPENBOX_USER_MENU"
  else
    [ -e "$OPENBOX_MENU" ] &&
    mv $OPENBOX_MENU $OPENBOX_MENU.$(date +%Y%m%d%H%M%S)
    OPENBOXMENU="$OPENBOX_MENU"
  fi

  local menuname=`basename "$OPENBOXMENU"`
  local menudir=`echo "$OPENBOXMENU"|sed "s/\/$menuname//"`
  [ -d "$menudir" ] || mkdir -p "$menudir"
}

function start_openbox_menu {
# the start of the openbox menu
cat >> $OPENBOXMENU << EOF
<?xml version="1.0" encoding="UTF-8"?>
<openbox_menu xmlns="http://openbox.org/"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://openbox.org/
  file:///usr/share/openbox/menu.xsd">
  
<menu id="root-menu" label="Openbox">
EOF
}

function close_openbox_menu {
# closing the openbox menu
cat >> $OPENBOXMENU << EOF
    <separator />
    <menu id="openbox-menu" label="Openbox">
      <item label="ObConf">
        <action name="Execute"><execute>obconf</execute></action>
      </item>
      <item label="Reconfigure">
        <action name="Reconfigure" />
      </item>
      <separator />
      <item label="Exit">
        <action name="Exit" />
      </item>
    </menu>
  </menu>
  
  </openbox_menu>
  
EOF
}

function insert_submenu_begin() {
  echo "<menu id=\"$1\" label=\"$1\">" >> $OPENBOXMENU
}

function insert_submenu_end {
  echo "</menu>" >>$OPENBOXMENU
}

function insert_entry() {
    menuline=$1
    APP=`echo $menuline|cut -f1 -d":" `
    EXEC=`echo $menuline|cut -f4 -d":" `
    TERM=`echo $menuline|cut -f5 -d":" `
    if [[ $TERM == true ]] ; then
      echo "  <item label=\"$APP\">" >>$OPENBOXMENU
      echo "    <action name=\"Execute\"><execute>xterm -e $EXEC</execute></action>" >>$OPENBOXMENU
      echo "  </item>" >>$OPENBOXMENU
    else
      echo "  <item label=\"$APP\">" >>$OPENBOXMENU
      echo "    <action name=\"Execute\"><execute>$EXEC</execute></action>" >>$OPENBOXMENU
      echo "  </item>" >>$OPENBOXMENU
    fi
}

function build_menu {
  cat $SORTED_INVENTORY | while read line ; do
    case $line in
        START_SUB*) insert_submenu_begin `echo $line|cut -f2 -d" " ` ;;
	END_SUB) insert_submenu_end ;;
        *) insert_entry "$line" ;;
    esac
  done
}

# building the menu
prepare_menu_location &&
start_openbox_menu &&
build_menu &&
close_openbox_menu ||
echo "Generating of the openbox menu has failed!"
