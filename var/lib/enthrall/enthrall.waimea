#!/bin/sh

function prepare_menu_location {
# moving the old menu out of the way

  if [ "$OWN_MENU" == "true" ]; then
    [ -e "$WAIMEA_USER_MENU" ] &&
    mv $WAIMEA_USER_MENU $WAIMEA_USER_MENU.$(date +%Y%m%d%H%M%S)
    WAIMEAMENU="$WAIMEA_USER_MENU"
  else
    [ -e "$WAIMEA_MENU" ] &&
    mv $WAIMEA_MENU $WAIMEA_MENU.$(date +%Y%m%d%H%M%S)
    WAIMEAMENU="$WAIMEA_MENU"
  fi

  local menuname=`basename "$WAIMEAMENU"`
  local menudir=`echo "$WAIMEAMENU"|sed "s/\/$menuname//"`
  [ -d "$menudir" ] || mkdir -p "$menudir"

}

function start_waimeamenu {
# the start of the waimea menu
cat >>$WAIMEAMENU << EOF
  ! Warning, this file is automatically generated
  ! DO NOT EDIT
  !
  ! Start of the waimea menu
  
  [start] (rootmenu)
    [title] (Waimea)
EOF
}

function close_waimeamenu {
# closing the waimea menu
cat >>$WAIMEAMENU << EOF
  [submenu] (Waimea)" 
    [sub] (styles) <!stylesdir.pl>
    [submenu] (desktops)
      [item] (go to desktop 1) "gotodesktop(0)"
      [item] (go to desktop 2) "gotodesktop(1)"
      [item] (go to desktop 3) "gotodesktop(2)"
      [item] (go to desktop 4) "gotodesktop(3)"
    [end]
    [restart] (restart)
    [exit]    (exit)
  [end]
  
  !
  ! Window Menu
  !
  [start] (window)
    [title]   (\n)
    [submenu] (settings)
      [checkbox=MAXIMIZED]      @FALSE (maximized)        "maximize"         @TRUE (maximized)        "unmaximize"
      [checkbox=SHADED]         @FALSE (shaded)           "shade"            @TRUE (shaded)           "unshade"
      [checkbox=STICKY]         @FALSE (sticky)           "sticky"           @TRUE (sticky)           "unsticky"
      [checkbox=ALWAYSONTOP]    @FALSE (always on top)    "alwaysontopon"    @TRUE (always on top)    "alwaysontopoff"
      [checkbox=ALWAYSATBOTTOM] @FALSE (always at bottom) "alwaysatbottomon" @TRUE (always at bottom) "alwaysatbottomoff"
      [checkbox=DECORTITLE]     @FALSE (titlebar)         "decortitleon"     @TRUE (titlebar)         "decortitleoff"
      [checkbox=DECORHANDLE]    @FALSE (handlebar)        "decorhandleon"    @TRUE (handlebar)        "decorhandleoff"
      [checkbox=DECORBORDER]    @FALSE (border)           "decorborderon"    @TRUE (border)           "decorborderoff"
      [checkbox=DECORALL]       @FALSE (all decorations)  "decorallon"       @TRUE (all decorations)  "decoralloff"
    [end]
    [sub]     (process info) <!procinfo.pl -host \"\h\" -pid \"\p\">
    [submenu] (desktop functions)
      [sub] (join desktop) <join_desk>
      [start] (join_desk)
        [item] (desktop 1) "joindesktop(0)"
        [item] (desktop 2) "joindesktop(1)"
        [item] (desktop 3) "joindesktop(2)"
        [item] (desktop 4) "joindesktop(3)"
      [end]
      [sub] (part desktop) <part_desk>
      [start] (part_desk)
        [item] (desktop 1) "partdesktop(0)"
        [item] (desktop 2) "partdesktop(1)"
        [item] (desktop 3) "partdesktop(2)"
        [item] (desktop 4) "partdesktop(3)"
      [end]
      [sub] (send to desktop) <send_desk>
      [start] (send_desk)
        [item] (desktop 1) "partcurrentjoindesktop(0)"
        [item] (desktop 2) "partcurrentjoindesktop(1)"
        [item] (desktop 3) "partcurrentjoindesktop(2)"
        [item] (desktop 4) "partcurrentjoindesktop(3)"
      [end]
      [item] (join all)     "joinalldesktops"
      [item] (part all)     "partalldesktopsexceptcurrent"
      [item] (part current) "partcurrentdesktop"
    [end]
    [item]    (raise)        "raise"
    [item]    (lower)        "lower"
    [item]    (kill client)  "kill"
    [item]    (close)        "close"
  [end]
  
  # End of the waimea menu
EOF
}

function insert_submenu_begin() {
  echo "[submenu] ($1)" >> $WAIMEAMENU
}

function insert_submenu_end {
  echo "[end]" >> $WAIMEAMENU
}

function insert_entry() {
    menuline=$1
    APP=`echo $menuline|cut -f1 -d":" `
    EXEC=`echo $menuline|cut -f4 -d":" `
    TERM=`echo $menuline|cut -f5 -d":" `
    if [[ $TERM == true ]] ; then
      echo "[item] ("$APP") {xterm -e $EXEC}" >> $WAIMEAMENU
    else
      echo "[item] ("$APP") {$EXEC}" >> $WAIMEAMENU
    fi
}

function build_menu {
  cat $SORTED_INVENTORY | while read line ; do
    case $line in
        START_SUB*) insert_submenu_begin `echo $line|cut -f2 -d" " ` ;;
	END_SUB) insert_submenu_end ;;
        *) insert_entry "$line" ;;
    esac
  done
}

# building the menu
prepare_menu_location &&
start_waimeamenu &&
build_menu &&
close_waimeamenu ||
echo "Generating of the waimea menu has failed!"
