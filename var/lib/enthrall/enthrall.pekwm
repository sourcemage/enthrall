#!/bin/sh

## Please note, pekwm really doesn't like tabs in it's menu.
## if you want the generation to work, use spaces instead.


function prepare_menu_location {
# moving the old menu out of the way

  if [ "$OWN_MENU" == "true" ]; then
    [ -e "$PEKWM_USER_MENU" ] &&
    mv $PEKWM_USER_MENU $PEKWM_USER_MENU.$(date +%Y%m%d%H%M%S)
    PEKWMMENU="$PEKWM_USER_MENU"
  else
    [ -e "$PEKWM_MENU" ] &&
    mv $PEKWM_MENU $PEKWM_MENU.$(date +%Y%m%d%H%M%S)
    PEKWMMENU="$PEKWM_MENU"
  fi

  local menuname=`basename "$PEKWMMENU"`
  local menudir=`echo "$PEKWMMENU"|sed "s/\/$menuname//"`
  [ -d "$menudir" ] || mkdir -p "$menudir"
}

function start_pekwm_menu {
# the start of the pekwm menu
cat >> $PEKWMMENU << EOF
  # Warning, this file is automatically generated
  # DO NOT EDIT
  #
  # Start of the pekwm menu
  
  # Variables
  \$TERM = "xterm +sb -bg black -fg grey90"

  RootMenu = "Pekwm" {
EOF
}

function close_pekwm_menu {
# closing the pekwm menu
cat >> $PEKWMMENU << EOF
  Entry = "----------" { Actions = "NoAction" }

  Submenu = "Pekwm" {
    Submenu = "Others" {
      Entry = "Xterm" { Actions = "RestartOther xterm" }
    }
  Submenu = "Themes" {
    Entry { Actions = "Dynamic /usr/share/pekwm/scripts/pekwm_themeset.pl /usr/share/pekwm/themes" }
  }
  Entry = "Reload" { Actions = "Reload" }
  Entry = "Restart" { Actions = "Restart" }
  Entry = "Exit" { Actions = "Exit" }
  }
}
  
  WindowMenu = "Window Menu" {
    Entry = "(Un)Stick" { Actions = "Stick" }
    Entry = "(Un)Shade" { Actions = "Shade" }
    Submenu = "Maximize" {
      Entry = "Full" { Actions = "Maximize " }
      Entry = "Horizontal" { Actions = "MaximizeHorizontal " }
      Entry = "Vertical" { Actions = "MaximizeVertical " }
    }
    Submenu = "Stacking" {
      Entry = "Raise " { Actions = "Raise " }
      Entry = "Lower" { Actions = "Lower" }
      Entry = "Always On Top " { Actions = "AlwaysOnTop " }
      Entry = "Always Below" { Actions = "AlwaysBelow " }
    }
    Submenu = "Decor" {
      Entry = "Decor" { Actions = "ToggleDecor " }
      Entry = "Border" { Actions = "ToggleBorder " }
      Entry = "Titlebar" { Actions = "ToggleTitlebar " }
    }
    SubMenu = "Send To" {
      Entry = "Workspace 1" { Actions = "SendToWorkspace 1" }
      Entry = "Workspace 2" { Actions = "SendToWorkspace 2" }
      Entry = "Workspace 3" { Actions = "SendToWorkspace 3" }
      Entry = "Workspace 4" { Actions = "SendToWorkspace 4" }
    }
      Entry = "Iconify " { Actions = "Iconify " }
      Entry = "Close" { Actions = "Close" }
      Entry = "Kill " { Actions = "Kill " }
  }
  
  # End of the pekwm menu
EOF
}

function insert_submenu_begin() {
  echo "Submenu = \"$1\" {" >> $PEKWMMENU
}

function insert_submenu_end {
  echo "}" >> $PEKWMMENU
}

function insert_entry() {
    menuline=$1
    APP=`echo $menuline|cut -f1 -d":" `
    EXEC=`echo $menuline|cut -f4 -d":" `
    TERM=`echo $menuline|cut -f5 -d":" `
    if [[ $TERM == true ]] ; then
      echo "Entry = \"$APP\" { Actions = \"Exec xterm -e $EXEC \" }" >>$PEKWMMENU
    else
      echo "Entry = \"$APP\" { Actions = \"Exec $EXEC \" }" >>$PEKWMMENU
    fi
}

function build_menu {
  cat $SORTED_INVENTORY | while read line ; do
    case $line in
        START_SUB*) insert_submenu_begin `echo $line|cut -f2 -d" " ` ;;
	END_SUB) insert_submenu_end ;;
        *) insert_entry "$line" ;;
    esac
  done
}

# building the menu
prepare_menu_location &&
start_pekwm_menu &&
build_menu &&
close_pekwm_menu ||
echo "Generating of the pekwm menu has failed!"
