#!/bin/sh

function prepare_menu_location {
# moving the old menu out of the way

  if [ "$OWN_MENU" == "true" ]; then
    [ -e "$DESKMENU_USER_MENU" ] &&
    mv $DESKMENU_USER_MENU $DESKMENU_USER_MENU.$(date +%Y%m%d%H%M%S)
    DESKMENU="$DESKMENU_USER_MENU"
  else
    [ -e "$DESKMENU_MENU" ] &&
    mv $DESKMENU_MENU $DESKMENU_MENU.$(date +%Y%m%d%H%M%S)
    DESKMENU="$DESKMENU_MENU"
  fi

  local menuname=`basename "$DESKMENU"`
  local menudir=`echo "$DESKMENU"|sed "s/\/$menuname//"`
  [ -d "$menudir" ] || mkdir -p "$menudir"
}

function start_deskmenu {
# the start of the DESKMENU menu
cat >> $DESKMENU << EOF
  # Warning, this file is automatically generated
  # DO NOT EDIT
  #
  # Start of the DESKMENU menu

EOF
}

function close_deskmenu {
# closing the DESKMENU menu
cat >> $DESKMENU << EOF
  # End of the DESKMENU menu
EOF
}

function insert_submenu_begin() {
  echo "submenu=$1" >> $DESKMENU
}

function insert_submenu_end {
  echo "endmenu=" >> $DESKMENU
}

function insert_entry() {
    menuline=$1
    APP=`echo $menuline|cut -f1 -d":" `
    EXEC=`echo $menuline|cut -f4 -d":" `
    TERM=`echo $menuline|cut -f5 -d":" `
    if [[ $TERM == true ]] ; then
      echo "menuitem=${APP}:xterm -e $EXEC}" >> $DESKMENU
    else
      echo "menuitem=${APP}:${EXEC}" >> $DESKMENU
    fi
}

function build_menu {
  cat $SORTED_INVENTORY | while read line ; do
    case $line in
        START_SUB*) insert_submenu_begin `echo $line|cut -f2 -d" " ` ;;
	END_SUB) insert_submenu_end ;;
        *) insert_entry "$line" ;;
    esac
  done
}

# building the menu
prepare_menu_location &&
start_deskmenu &&
build_menu &&
close_deskmenu ||
echo "Generating of the deskmenu menu has failed!"
