#!/bin/sh

function prepare_menu_location {
# moving the old menu out of the way

  if [ "$OWN_MENU" == "true" ]; then
    [ -e "$DMENU_USER_MENU" ] &&
    mv $DMENU_USER_MENU $DMENU_USER_MENU.$(date +%Y%m%d%H%M%S)
    DMENU="$DMENU_USER_MENU"
  else
    [ -e "$DMENU_MENU" ] &&
    mv $DMENU_MENU $DMENU_MENU.$(date +%Y%m%d%H%M%S)
    DMENU="$DMENU_MENU"
  fi

  local menuname=`basename "$DMENU"`
  local menudir=`echo "$DMENU"|sed "s/\/$menuname//"`
  [ -d "$menudir" ] || mkdir -p "$menudir"
}

function start_dmenu {
# the start of the DMENU menu
cat >> $DMENU << EOF
  # Warning, this file is automatically generated
  # DO NOT EDIT
  #
  # Start of the DMENU menu

EOF
}

function close_dmenu {
# closing the DMENU menu
cat >> $DMENU << EOF
  # End of the DMENU menu
EOF
}

function insert_entry() {
    menuline=$1
    APP=`echo $menuline|cut -f1 -d":" `
    EXEC=`echo $menuline|cut -f4 -d":" `
    TERM=`echo $menuline|cut -f5 -d":" `
    if [[ $TERM == true ]] ; then
      echo "xterm -e ${EXEC}" >> $DMENU
    else
      echo "${EXEC}" >> $DMENU
    fi
}

function build_menu {
  cat $SORTED_INVENTORY | while read line ; do
    case $line in
        START_SUB*) true ;;
	END_SUB) true ;;
        *) insert_entry "$line" ;;
    esac
  done
}

# building the menu
prepare_menu_location &&
start_dmenu &&
build_menu &&
close_dmenu ||
echo "Generating of the dmenu menu has failed!"

