#!/bin/sh

function prepare_menu_location {
# moving the old menu out of the way

  if [ "$OWN_MENU" == "true" ]; then
    [ -e "$PWM_USER_MENU" ] &&
    mv $PWM_USER_MENU $PWM_USER_MENU.$(date +%Y%m%d%H%M%S)
    PWMMENU="$PWM_USER_MENU"
  else
    [ -e "$PWM_MENU" ] &&
    mv $PWM_MENU $PWM_MENU.$(date +%Y%m%d%H%M%S)
    PWMMENU="$PWM_MENU"
  fi

  local menuname=`basename "$PWMMENU"`
  local menudir=`echo "$PWMMENU"|sed "s/\/$menuname//"`
  [ -d "$menudir" ] || mkdir -p "$menudir"
}

function start_pwmmenu {
# the start of the pwm menu
cat >> $PWMMENU << EOF
  # Warning, this file is automatically generated
  # DO NOT EDIT
  #
  # Start of the pwm menus
  
  menu "exit_menu", "Exit" {
          entry "Restart", "restart"
          entry "Exit", "exit"
  }
  
  menu "root_menu", "Root Menu" {

EOF
}

function close_pwmmenu {
# closing the pwm menu
cat >> $PWMMENU << EOF
   menu "pwm_menu", "pwm" {
   entry "PWM manual", "exec", "xterm -T \\"PWM manual\\" -e man pwm"
   submenu "exit_menu"
   }
   }
   
   menu "frame_cwin_menu", "Frame/ClientWin Ops" {
           contextual
           # client window ops 
           entry "Close", "close"
   #       entry "Tg tagged", "toggle_tagged"
   
           # frame ops
           entry "Tg shade", "toggle_shade"
           entry "Tg stick", "toggle_stick"
           entry "Tg maximize", "toggle_maximize", 3
   
           # Put this far from close to prevent accidental kill
           entry "Kill", "kill"
   
           entry "Detach", "detach"
           submenu "attach_menu"
           
           submenu "movetows_menu"
   }
   
   menu "dockwin_menu", "DockWin Ops" {
           contextual
           entry "Tg Dir", "toggle_dock_dir"
           entry "Close", "close"
           entry "Kill", "kill"
   }
   
   ; End of the pwm menu
EOF
}

function insert_submenu_begin() {
  echo "menu \"$1\", \"$1\" {" >> $PWMMENU
}

function insert_submenu_end {
   echo "}" >> $PWMMENU
}

function insert_entry() {
    menuline=$1
    APP=`echo $menuline|cut -f1 -d":" `
    EXEC=`echo $menuline|cut -f4 -d":" `
    TERM=`echo $menuline|cut -f5 -d":" `
    if [[ $TERM == true ]] ; then
      echo " entry \"$APP\", \"exec\", \"xterm -e $EXEC\"" >> $PWMMENU
    else
      echo " entry \"$APP\", \"exec\", \"$EXEC\"" >> $PWMMENU
    fi
}

function build_menu {
  cat $SORTED_INVENTORY | while read line ; do
    case $line in
        START_SUB*) insert_submenu_begin `echo $line|cut -f2 -d" " ` ;;
	END_SUB) insert_submenu_end ;;
        *) insert_entry "$line" ;;
    esac
  done
}

# building the menu
prepare_menu_location &&
start_pwmmenu &&
build_menu &&
close_pwmmenu ||
echo "Generating of the pwm menu has failed!"
